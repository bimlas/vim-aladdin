Describe core
  Before all
    let lighter = high#core#Clone()
  End

  Describe #clone
    It returns a clone of default settings
      Assert Equals(lighter, high#core#Clone())
    End

    It returns a clone of argument
      let clone = high#core#Clone(lighter)
      Assert Equals(lighter, clone)
      Assert NotSame(lighter, clone)
    End
  End

  Describe #enabledForFiletype
    It enabled for every filetype by default
      let lighter.whitelist = []
      let lighter.blacklist = []
      Assert Equals(high#core#EnabledForFiletype(lighter, 'text'), 1)
      Assert Equals(high#core#EnabledForFiletype(lighter, 'asciidoc'), 1)
    End

    It enabled only for whitelisted filetypes
      let lighter.whitelist = ['text']
      let lighter.blacklist = []
      Assert Equals(high#core#EnabledForFiletype(lighter, 'text'), 1)
      Assert Equals(high#core#EnabledForFiletype(lighter, 'asciidoc'), 0)
    End

    It disabled only for blacklisted filetypes
      let lighter.whitelist = []
      let lighter.blacklist = ['text']
      Assert Equals(high#core#EnabledForFiletype(lighter, 'text'), 0)
      Assert Equals(high#core#EnabledForFiletype(lighter, 'asciidoc'), 1)
    End

    It disabled for both blacklisted and whitelisted filetypes
      let lighter.whitelist = ['text']
      let lighter.blacklist = ['text']
      Assert Equals(high#core#EnabledForFiletype(lighter, 'text'), 0)
    End
  End

End
